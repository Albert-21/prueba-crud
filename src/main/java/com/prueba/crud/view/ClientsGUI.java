/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.prueba.crud.view;

import com.prueba.crud.controller.DAOClients;
import com.prueba.crud.controller.FactoyDAO;
import com.prueba.crud.model.Clients;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alberto
 */
public class ClientsGUI extends javax.swing.JFrame {

    private DAOClients daoClients;
    private DefaultTableModel modeloTabla;
    private ArrayList<Clients> lista;

    private final String expresionEmail = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
    private Pattern patronEmail;

    private String exprecionRFCMoral = "^(([A-ZÑ&]{3})([0-9]{2})([0][13578]|[1][02])(([0][1-9]|[12][\\d])|[3][01])([A-Z0-9]{3}))|"
            + "(([A-ZÑ&]{3})([0-9]{2})([0][13456789]|[1][012])(([0][1-9]|[12][\\d])|[3][0])([A-Z0-9]{3}))|"
            + "(([A-ZÑ&]{3})([02468][048]|[13579][26])[0][2]([0][1-9]|[12][\\d])([A-Z0-9]{3}))|"
            + "(([A-ZÑ&]{3})([0-9]{2})[0][2]([0][1-9]|[1][0-9]|[2][0-8])([A-Z0-9]{3}))$";
    private String exprecionRFCFisica = "^(([A-ZÑ&]{4})([0-9]{2})([0][13578]|[1][02])(([0][1-9]|[12][\\d])|[3][01])([A-Z0-9]{3}))|"
            + "(([A-ZÑ&]{4})([0-9]{2})([0][13456789]|[1][012])(([0][1-9]|[12][\\d])|[3][0])([A-Z0-9]{3}))|"
            + "(([A-ZÑ&]{4})([02468][048]|[13579][26])[0][2]([0][1-9]|[12][\\d])([A-Z0-9]{3}))|"
            + "(([A-ZÑ&]{4})([0-9]{2})[0][2]([0][1-9]|[1][0-9]|[2][0-8])([A-Z0-9]{3}))$";

    private Pattern patronRFCMoral;
    private Pattern patronRFCFisica;

    /**
     * Creates new form ClientsGUI
     */
    private void limpiar() {
        txtNombre.setText("");
        txtRFC.setText("");
        txtTelefono.setText("");
        txtMail.setText("");
        txtIvalidoMail.setVisible(false);
        txtIvalidoRFC.setVisible(false);

    }

    private boolean validateEmail(String email) {
        patronEmail = Pattern.compile(expresionEmail);
        return patronEmail.matcher(email).matches();
    }

    private boolean validateRFC(String RFC) {
        patronRFCMoral = Pattern.compile(exprecionRFCMoral);
        patronRFCFisica = Pattern.compile(exprecionRFCFisica);
        return patronRFCFisica.matcher(RFC).matches() || patronRFCMoral.matcher(RFC).matches();

    }
    
    private void mostrarRegistros(){
         lista.clear();
        modeloTabla.setRowCount(0);

        lista = daoClients.showAll();
        lista.forEach((registro) -> {
            modeloTabla.addRow(new Object[]{registro.getId(), registro.getNombre(), registro.getRFC(), registro.getTelefono(), registro.getEmail()});
        });
    }

    public ClientsGUI() {
        this.lista = new ArrayList<Clients>();
        this.setLocationRelativeTo(null);
        daoClients = (DAOClients) FactoyDAO.create(FactoyDAO.TypeDAO.CLIENTS);

        initComponents();
        this.modeloTabla = (DefaultTableModel) tabla.getModel();

        this.txtIvalidoMail.setVisible(false);
        this.txtIvalidoRFC.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JFormattedTextField();
        txtNombre = new javax.swing.JTextField();
        txtRFC = new javax.swing.JTextField();
        txtMail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        txtIvalidoRFC = new javax.swing.JLabel();
        txtIvalidoMail = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Nombre");

        jLabel2.setText("RFC");

        jLabel3.setText("Telefono");

        jLabel4.setText("E-mail");

        try {
            txtTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("### ### ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "RFC", "Telefono", "E-mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnMostrar.setText("Mostrar");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        txtIvalidoRFC.setForeground(new java.awt.Color(204, 0, 0));
        txtIvalidoRFC.setText("RFC no valido");

        txtIvalidoMail.setForeground(new java.awt.Color(204, 0, 0));
        txtIvalidoMail.setText("E-mail no valido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addGap(12, 12, 12)
                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIvalidoMail))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btnGuardar)
                        .addGap(21, 21, 21)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnEliminar)
                        .addGap(22, 22, 22)
                        .addComponent(btnBuscar)
                        .addGap(29, 29, 29)
                        .addComponent(btnMostrar)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel2)
                .addGap(31, 31, 31)
                .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(txtIvalidoRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1))
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtIvalidoRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3))
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtIvalidoMail, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGuardar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar)
                    .addComponent(btnBuscar)
                    .addComponent(btnMostrar))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        txtIvalidoMail.setVisible(false);
        txtIvalidoRFC.setVisible(false);

        if (!"".equals(txtNombre.getText().trim()) & !"".equals(txtRFC.getText().trim()) & !"".equals(txtTelefono.getText().trim()) & !"".equals(txtMail.getText().trim())) {

            boolean isValidoEmail = validateEmail(txtMail.getText().trim());
            boolean isValidoRFC = validateRFC(txtRFC.getText().trim());

            if (!isValidoEmail) {
                txtIvalidoMail.setVisible(true);
            }
            if (!isValidoRFC) {
                txtIvalidoRFC.setVisible(true);
            }
            if (isValidoRFC & isValidoEmail) {
                if (daoClients.add(new Clients(txtNombre.getText().trim(), txtRFC.getText().trim(), txtTelefono.getText().trim(), txtMail.getText().trim()))) {
                    JOptionPane.showMessageDialog(null, "Se guardo corectamete");
                    mostrarRegistros();
                    limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Uṕs ocurrio un problema");

                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Hay campos vacios");

        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        txtIvalidoMail.setVisible(false);
        txtIvalidoRFC.setVisible(false);

        if (!"".equals(txtNombre.getText().trim()) & !"".equals(txtRFC.getText().trim()) & !"".equals(txtTelefono.getText().trim()) & !"".equals(txtMail.getText().trim())) {

            boolean isValidoEmail = validateEmail(txtMail.getText().trim());
            boolean isValidoRFC = validateRFC(txtRFC.getText().trim());

            if (!isValidoEmail) {
                txtIvalidoMail.setVisible(true);
            }
            if (!isValidoRFC) {
                txtIvalidoRFC.setVisible(true);
            }

            String ID = JOptionPane.showInputDialog("Ingrese el ID a actualizar");
            if (isValidoRFC & isValidoEmail & ID != "") {

                if (daoClients.update(new Clients(Integer.parseInt(ID), txtNombre.getText().trim(), txtRFC.getText().trim(), txtTelefono.getText().trim(), txtMail.getText().trim()))) {
                    JOptionPane.showMessageDialog(null, "Se Actualizo corectamete");
                    mostrarRegistros();
                    limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Uṕs ocurrio un problema");

                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Hay campos vacios");

        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        String ID = JOptionPane.showInputDialog("Ingrese el ID a borrar");
        if (ID != "") {
            if (daoClients.delete(Integer.parseInt(ID))) {
                JOptionPane.showMessageDialog(null, "Se Elimino corectamete");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Uṕs ocurrio un problema");

            }

        }


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String ID = JOptionPane.showInputDialog("Ingrese el ID a buscar");
        if (ID != "") {
            Clients registro = daoClients.showOne(Integer.parseInt(ID));
            if (registro != null) {
                modeloTabla.setRowCount(0);
                modeloTabla.addRow(new Object[]{registro.getId(), registro.getNombre(), registro.getRFC(), registro.getTelefono(), registro.getEmail()});

            } else {
            }

        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        // TODO add your handling code here:
       mostrarRegistros();

    }//GEN-LAST:event_btnMostrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JLabel txtIvalidoMail;
    private javax.swing.JLabel txtIvalidoRFC;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRFC;
    private javax.swing.JFormattedTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
